
# Основы
# Импорт библиотеки pandas
import pandas as pd

# =====================================================================
# Чтение данных из файла
# Чтение данных из CSV файла:
df = pd.read_csv('file.csv', header=None)
# Чтение данных из Excel файла:
df = pd.read_excel('file.xlsx')
# Чтение данных из базы данных:
import sqlite3
conn = sqlite3.connect('database.db')
df = pd.read_sql_query('SELECT * FROM table', conn)

# =====================================================================
# Основные операции
# Показать первые N строк таблицы:
df.head(N)
# Показать последние N строк таблицы:
df.tail(N)
# Replace headers
headers = ["symboling","normalized-losses","make","fuel-type","aspiration", "num-of-doors","body-style",]
df.columns = headers
# replace the "?" symbol with NaN
df1=df.replace('?',np.NaN)
# Показать общую информацию о таблице:
df.info()
# Показать статистические характеристики таблицы:
df.describe()
# Показать список столбцов таблицы:
df.columns
# Показать список индексов таблицы:
df.index
# Фильтрация данных
# Выбрать строки, соответствующие определенному условию:
df[df['column'] > 5]
# Выбрать строки, соответствующие нескольким условиям:
df[(df['column1'] > 5) & (df['column2'] == 'value')]
# Выбрать строки, содержащие определенное значение:
df[df['column'].str.contains('value')]

# =====================================================================
# Группировка данных
# Сгруппировать данные по значению столбца и посчитать среднее значение для каждой группы:
df.groupby('column')['other_column'].mean()
# Сгруппировать данные по значению столбца и посчитать количество элементов в каждой группе:
df.groupby('column').size()

# =====================================================================
# Обработка пропущенных значений
# Проверить, есть ли пропущенные значения в таблице:
df.isnull().sum()
# Удалить строки, содержащие пропущенные значения:
df.dropna(inplace=True)
# drop rows with missing values only in column 'A'
df_dropna_A = df.dropna(subset=['A'])
# Заполнить пропущенные значения определенным значением:
df.fillna(value, inplace=True)

# =====================================================================
# Сохранение данных
# Сохранить данные в CSV файл:
df.to_csv('file.csv', index=False)
# Сохранить данные в Excel файл:
df.to_excel('file.xlsx', index=False)

# =====================================================================
# Работа с таблицами
# Создание таблицы
# Создать пустую таблицу:
df = pd.DataFrame()
# Создать таблицу из списка списков:
data = [['Alice', 25], ['Bob', 30], ['Charlie', 35]]
